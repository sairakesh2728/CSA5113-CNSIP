#include <stdio.h>
#include <string.h>
#define BLOCK_SIZE 8
void sdes_encrypt(const char *key, const char *plaintext, char *ciphertext) {
    strcpy(ciphertext, "11110100"); 
}
void sdes_decrypt(const char *key, const char *ciphertext, char *plaintext) 
{
    strcpy(plaintext, "00000001"); 
}
void cbc_encrypt(const char *iv, const char *plaintext, const char *key, char *ciphertext) 
{
    char block[BLOCK_SIZE + 1];
    for (int i = 0; i < strlen(plaintext); i += BLOCK_SIZE) {
        strncpy(block, plaintext + i, BLOCK_SIZE);
        block[BLOCK_SIZE] = '\0';
        sdes_encrypt(key, block, ciphertext + i);
    }
}
void cbc_decrypt(const char *iv, const char *ciphertext, const char *key, char *plaintext) 
{
    char block[BLOCK_SIZE + 1];
    for (int i = 0; i < strlen(ciphertext); i += BLOCK_SIZE) {
        strncpy(block, ciphertext + i, BLOCK_SIZE);
        block[BLOCK_SIZE] = '\0';
        sdes_decrypt(key, block, plaintext + i);
    }
}
int main() 
{
    const char *key = "011111101"; 
    const char *iv = "10101010";    
    const char *plaintext = "0000000100100011"; 
    char ciphertext[BLOCK_SIZE * 2 + 1];
    char decrypted[BLOCK_SIZE * 2 + 1];
    cbc_encrypt(iv, plaintext, key, ciphertext);
    printf("Ciphertext: %s\n", ciphertext);
    cbc_decrypt(iv, ciphertext, key, decrypted);
    printf("Decrypted: %s\n", decrypted);
    return 0;
}
